<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.1.xsd"
						default-lazy-init="true">
	
	

	<!-- 自动搜索@Component , @Service , @Repository等标注的类 不搜索@Controller的类 -->
	<!-- 自动扫描组件，这里要把web下面的 controller去除，他们是在spring3-servlet.xml中配置的，如果不去除会影响事务管理的。 -->
	<context:component-scan base-package="com.github.rockysoft" annotation-config="true">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<context:annotation-config />
	
	<context:property-placeholder location="classpath:jdbc.properties" />
	<!--
	<bean class="org.apache.ibatis.logging.LogFactory" init-method="useSlf4jLogging"></bean>
	-->
	
	<!-- 配置基于注解的事务aop -->
	<tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true" />
	
	<!-- 配置事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 加入Aspectj配置 -->  
	<aop:aspectj-autoproxy />
	<bean id="logAspect" class="com.github.rockysoft.aop.LogAspect"></bean>  
	 
	<!-- AOP事务增强-->
	<!--
	<aop:config proxy-target-class="true">  
 		<aop:aspect id="myAspect" ref="logAspect">  
  			<aop:pointcut expression="execution(* com.github.rockysoft.service.*.*(..))" id="logPointCut"/>  
  			<aop:before pointcut-ref="logPointCut"  method="logAll"/>  
 		</aop:aspect>  
	</aop:config>
    -->       
 
<!--  
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
	  <constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	-->
	<!-- MyBatis配置 -->
  	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
  		<property name="dataSource" ref="dataSource" />
  		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
  		<property name="typeAliasesPackage" value="com.github.rockysoft.entity"/>
  		<!-- 显式指定Mapper文件位置 -->
  		<property name="mapperLocations" value="classpath:/sqlmap/*.xml" />
	</bean>
		
	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口-->
  	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="com.github.rockysoft.mapper" />
	  <!--  
	  <property name="annotationClass" value="com.github.rockysoft.repository.mybatis.MyBatisRepository"/>
	  -->
	</bean>
	
	<!--
	<bean id="dataSource2" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="${jdbc.driverClassName}"></property>
      <property name="url" value="${jdbc.url}"></property>
      <property name="username" value="${jdbc.username}"></property>
      <property name="password" value="${jdbc.password}"></property>
  </bean>
  -->
  
	<!--dbcp 连接池-->
	<bean id="dataSource-mirror" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		
		<!-- Connection Pooling Info -->
		<property name="initialSize" value="${dbcp.initialSize}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="defaultAutoCommit" value="true" />
	</bean>

	<!--druid 连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="filters" value="stat"/>
        <property name="maxActive" value="8"/>
        <property name="initialSize" value="2"/>
        <property name="maxWait" value="30"/>
        <property name="minIdle" value="4"/>
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>
        <property name="minEvictableIdleTimeMillis" value="300000"/>
        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="maxOpenPreparedStatements" value="20"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="1800"/>
        <property name="logAbandoned" value="true"/>
    </bean>

</beans>
